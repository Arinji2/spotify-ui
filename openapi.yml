openapi: 3.0.0
info:
  title: Get Spotify Data
  version: 1.0.0

paths:
  /api/playlist/{playlist_id}:
    get:
      summary: Get Playlist Metadata + Tracks
      operationId: getPlaylist
      parameters:
        - $ref: "#/components/parameters/AuthSecret"
        - name: playlist_id
          in: path
          required: true
          schema:
            type: string

        # Pagination
        - name: limit
          in: query
          description: Max number of tracks to return
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100

        - name: offset
          in: query
          description: Number of tracks to skip
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0

        # Search filter
        - name: search
          in: query
          description: Search by track title or artist name
          required: false
          schema:
            type: string

        # Sort options
        - name: sort_by
          in: query
          description: Field to sort by
          required: false
          schema:
            type: string
            enum: [title, album, added_at, duration]

        - name: sort_order
          in: query
          description: Sort direction (asc or desc)
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc

      responses:
        "200":
          description: Playlist data with tracks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Playlist"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalError"

components:
  parameters:
    AuthSecret:
      name: secret
      in: query
      required: true
      schema:
        type: string

  responses:
    Unauthorized:
      description: Unauthorized â€” secret is invalid
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Token:
      type: object
      properties:
        access_token:
          type: string
          description: The access token to use for API calls.
        expiry:
          type: integer
          description: The UNIX timestamp when the token expires.
      required:
        - access_token
        - expiry

    Error:
      type: object
      properties:
        error:
          type: string
        display_message:
          type: string
      required:
        - error

    Image:
      type: object
      properties:
        url:
          type: string
        height:
          type: integer
        width:
          type: integer

    Artist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
        display_name:
          type: string

    Track:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        artists:
          type: array
          items:
            $ref: "#/components/schemas/Artist"
        duration_ms:
          type: integer

    Playlist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        images:
          type: array
          items:
            $ref: "#/components/schemas/Image"
        owner:
          $ref: "#/components/schemas/User"
        tracks:
          type: array
          items:
            $ref: "#/components/schemas/Track"
      required:
        - id
        - name
        - images
        - owner
        - tracks
